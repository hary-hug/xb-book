<style lang="less">
  .item {
    position: relative;
    display: flex;  
    flex-direction: column;  
    background-color: #ffffff;  
    margin-bottom: 40rpx;
    padding: 20rpx;
    border-radius: 10rpx;
    .favour {
      position: absolute;
      top: 20rpx;
      right: 20rpx;
      width: 60rpx;
      height: 60rpx;
    }
    .title {
      font-size: 36rpx;
      font-weight: 400;
      padding-right: 80rpx;
    }
    .author {
      font-size: 24rpx;
      margin-top: 10rpx;
    }
    .digest {
      font-size: 32rpx;
      margin-top: 20rpx;
    } 
    .tags {   
      margin-top: 10rpx; 
      font-size: 24rpx;
      .tag {
        float: left;
        margin-right: 20rpx;
        padding: 5rpx 10rpx;
        background-color: #F6F6F6;
        border-radius: 10rpx;
      }
    }   
  }
</style>
<template>
  <view class="item">
    <navigator 
      class="title"
      hover-class="none"
      url="/pages/poem/detail?poem_id={{item.poem_id}}"
      open-type="navigate">{{item.title}}</navigator>
    <text class="author">[{{item.dynasty}}] {{item.author}}</text>
    <text class="digest">{{item.digest}}</text>
    <view class="tags clear">
      <repeat for="{{item.tags}}" key="i" index="idx" item="tag">
      <text class="tag" wx:if="{{tag}}">{{tag}}</text>
      </repeat>
    </view>
    <image      
      @tap="doFavour"
      class="favour"            
      src="{{item.is_favour ? '../../assets/icons/favour.png' : '../../assets/icons/unfavour.png'}}"/>    
  </view>
</template>
<script>
import wepy from 'wepy'
import token from '../../util/token'
import api from '../../api'

export default class ListItem extends wepy.component {
  props = {
    item: {
      type: Object,
      default: {}
    }
  }

  methods = {
    // 点击收藏按钮
    doFavour: () => {
      if (!token.validate()) {
        wepy.navigateTo({
          url: '/pages/user/login'
        })
        return
      }
      if (this.item.is_favour) {
        // 已收藏则取消
        this.cancelFavourite()
        return
      }
      // 收藏按钮点击后给父页面传递数据
      this.$emit('drawer', this.item)
    },

    // 该方法给父页面this.$invoke使用
    // 用来改变收藏按钮颜色
    favour() {
      this.item.is_favour = 1      
      // 这里不能使用this.$apply()
      this.$parent.$apply()
    }
  }

  // 取消收藏
  async cancelFavourite() {
    const res = await api.request({
      url: api.uri.cancelFavourite,
      method: 'POST',
      data: {
        poem_id: this.item.poem_id
      }
    })

    if (res.code !== 1) {
      // 提示错误
      wepy.showToast({
        title: res.msg,
        icon: 'none',
        duration: 2000
      })
      return
    }
    // 改变按钮颜色
    this.item.is_favour = 0
    this.$parent.$apply()
  }
}
</script>
