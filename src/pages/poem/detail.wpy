<style lang="less">
  @-webkit-keyframes playAnimate{
      0%{ -webkit-transform: rotate(0deg);}
      50%{ -webkit-transform: rotate(180deg);}
      100%{ -webkit-transform: rotate(360deg);}
  }
  .detail {
    position: relative;
    height: 100%;
    padding: 40rpx;    
    .tool-bar {
      position: absolute;
      top: 135rpx;
      right: 40rpx;
      display: flex;
      flex-direction: column;
      align-items: center;  
      width: 100rpx;
      z-index: 99;      
      .tool-item {
        width: 40rpx;
        height: 40rpx;
        line-height: 40rpx;
        text-align: center;
        padding: 10rpx;
        border-radius: 40rpx;
        border: 1px solid #01C9A4;  
        margin-bottom: 20rpx;
      }
      .tool-item.playing {
        -webkit-animation: playAnimate 10s linear infinite;
        animation: playAnimate 10s linear infinite;
      }
      .tool-item.on {
        background: #01C9A4;
        color: #ffffff;
      }
    }    
    .detail-scroll {  
      z-index: 98;    
      height: 100%;        
      overflow: hidden;
      white-space: nowrap;
      border-radius: 10rpx;
      box-sizing: border-box;
      box-shadow: 0 0 12px 2px rgba(0, 0, 0, 0.08);
      background-color: #ffffff;
      .detail-box {        
        display: flex;    
        flex-direction: column;        
        .title {
          margin-top: 40rpx;  
          padding-left: 40rpx;          
          font-size: 36rpx;
          font-weight: 400;
          word-wrap: break-word;
          white-space: pre-wrap;      
        }  
        .author {
          margin-top: 20rpx;
          font-size: 26rpx;
          padding-left: 40rpx;
          padding-bottom: 20rpx;
          box-sizing: border-box; 
          border-bottom: 1px solid #F6F6F6;         
        }         
        .tags {  
          padding-left: 40rpx;          
          margin-top: 10rpx; 
          font-size: 24rpx;
          border-bottom: 1px solid #F6F6F6; 
          .tag {
            float: left;
            margin-right: 20rpx;
            margin-bottom: 10rpx; 
            padding: 5rpx 10rpx;
            background-color: #F6F6F6;
            border-radius: 10rpx;
          }
        }
        .content {          
          padding: 40rpx 100rpx 40rpx 40rpx;
          font-size: 32rpx;  
          line-height: 60rpx;
          word-wrap: break-word;
          white-space: pre-wrap;
        }   
      }      
    }    
  }

</style>
<template>
  <view class="container">
    <view class="detail">
      <view class="tool-bar">        
        <image
          wx:if="{{poem.audio && isPlay}}"
          class="tool-item playing" 
          @tap="pause"
          src="../../assets/icons/pause.png"/> 
        <image
          wx:if="{{poem.audio && !isPlay}}"
          class="tool-item"
          @tap="play"
          src="../../assets/icons/play.png"/>        
        <text class="tool-item {{currentTab == 1 ? 'on' : ''}}" 
          @tap='showTabContent' 
          id="1">文</text>
        <text class="tool-item {{currentTab == 2 ? 'on' : ''}}" 
          @tap='showTabContent' 
          id="2">音</text>
        <text class="tool-item {{currentTab == 3 ? 'on' : ''}}" 
          @tap='showTabContent' 
          id="3">译</text>
        <text class="tool-item {{currentTab == 4 ? 'on' : ''}}" 
          @tap='showTabContent' 
          id="4">注</text>
        <text class="tool-item {{currentTab == 5 ? 'on' : ''}}" 
          @tap='showTabContent' 
          id="5">赏</text>
      </view>      
      <scroll-view scroll-y class="detail-scroll">
        <view class="detail-box">
          <text class="title">{{poem.title}}</text>
          <text class="author">[{{poem.dynasty}}] {{poem.author}}</text>                      
          <view class="tags clear" wx:if="{{poem.tags.length > 0}}">
            <repeat for="{{poem.tags}}" key="i" index="idx" item="tag">
            <text class="tag" wx:if="{{tag}}">{{tag}}</text>
            </repeat>
          </view>
          <text class="content" hidden='{{currentTab == 1 ? false : true}}'>{{poem.content}}</text>
          <text class="content" hidden='{{currentTab == 2 ? false : true}}'>{{poem.pinyin ? poem.pinyin : '暂无内容~'}}</text>
          <text class="content" hidden='{{currentTab == 3 ? false : true}}'>{{poem.translation ? poem.translation : '暂无内容~'}}</text>
          <text class="content" hidden='{{currentTab == 4 ? false : true}}'>{{poem.remark ? poem.remark : '暂无内容~'}}</text>
          <text class="content" hidden='{{currentTab == 5 ? false : true}}'>{{poem.appreciate ? poem.appreciate : '暂无内容~'}}</text>
        </view>        
      </scroll-view>      
    </view>    
  </view>  
</template>
<script>
import wepy from 'wepy'
import api from '../../api'
import md5 from '../../util/md5'

const audioHost = 'https://static-song.eye-note.com/'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '诵小宝'
  }

  components = {

  }

  data = {
    audioCtx: null,
    poemId: 0,
    poem: {},
    currentTab: 1,
    isPlay: false
  }

  methods = {
    // 播放
    play(event) {
      this.audioCtx.play()
      this.isPlay = true
      this.$apply()
    },
    // 停止
    pause() {
      this.audioCtx.pause()
      this.isPlay = false
      this.$apply()
    },

    showTabContent(event) {
      this.currentTab = event.currentTarget.id
      this.$apply()
    }
  }

  onShow () {

  }

  onUnload () {    
    // 离开页面后关闭音频播放
    this.audioCtx.destroy()
    this.isPlay = false
    this.$apply()
  }

  async onLoad(options) {
    this.isPlay = false
    this.currentTab = 1
    this.poems = {}
    this.poemId = options.poem_id
    await this.registerAudioContext()
    this.getPoem()
  }

  async getPoem() {
    const res = await api.request({
      // 接口加sign参数，防止数据被采集
      url: api.uri.v1Poem + '/' + this.poemId + '?sign=' + md5.setPoemSign(this.poemId),
      method: 'GET'
    })
    this.poem = res.data
    if (this.poem.audio === 1) {
      // 音频地址
      let src = audioHost + md5.md5(this.poem.poem_id + 'E81vlldNEBKnRcTB') + '.mp3'
      this.audioCtx.src = src
    }
    this.$apply()
  }

  async registerAudioContext() {
    this.audioCtx = wx.createInnerAudioContext()
    // 自然播放结束
    this.audioCtx.onEnded((res) => {
      this.isPlay = false
      this.$apply()
    })
    // 播放失败
    this.audioCtx.onError((res) => {
      // 播放音频失败的回调
      this.isPlay = false
      this.$apply()
    })
    // 播放结束
    this.audioCtx.onStop((res) => {
      this.isPlay = false
      this.$apply()
    })
  }
}
</script>
