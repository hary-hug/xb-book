<style lang="less">
  .task {
    width: 100%;
    padding: 40rpx;            
    .task-detail {
      display: flex;
      flex-direction: column;
      border-bottom-left-radius: 10rpx;
      border-bottom-right-radius: 10rpx;
      background: #ffffff;
      .taks-tip {  
        display: flex;
        flex-direction: column;
        font-size: 30rpx;                 
        padding: 20rpx;
        border-bottom: 1px solid #F6F6F6;
        border-top: 1px solid #F6F6F6;
        text {
          padding: 10rpx 0;
        }
        .title {
          font-weight: 400;
        }
      }
      .task-item {
        padding: 20rpx;
        display: flex;
        flex-direction: row;
        text {
          height: 60rpx;
          line-height: 60rpx;
          text-align: center;
        }
        .title {
          font-size: 30rpx;                    
          width: 100rpx;
          height: 60rpx;
          background-color: #FF9800;
          border-radius: 10rpx;
          color: #ffffff;
        }
        .count {
          font-size: 28rpx;
          width: 60rpx;
          height: 60rpx;
          background: #F5F7F9;
          border-radius: 10rpx;
          margin-left: 20rpx;
        }
        .count.on {
          background-color: #01C9A4;
          color: #ffffff;
        }
      }   
    }
  }  

  .calendar {
    width: 100%;    
    background: #fff;
    font-size: 30rpx;
    color: #666;
    border-top-left-radius: 20rpx;
    border-top-right-radius: 20rpx;
  }

  .time {
    padding: 16rpx 20rpx;  
    text-align: center;
    font-size: 38rpx;
    color: #333;
  }

  .time text:nth-child(2) {
    margin-left: 10rpx;
  }

  .week-name {  
    width: 100%;
    display: flex;
    padding: 16rpx 0;
    color: #333;
  }

  .week-name view {
    flex: 1;
    text-align: center;
  }

  .week{
    width: 100%;
  }

  .week .day {
    width: 14.28%;
    height: 60rpx;
    line-height: 60rpx;
    display: inline-block;
    margin: 5rpx 0;
    text-align: center;
  }

  .week .day text{
    width: 100%;
    height: 100%;
    display: inline-block;
  }

  .week .current-day {
    background: #01C9A4;
    color: #ffffff;
    border-radius: 10rpx;
  }

  .week .select-day {
    background: #333;
    color: #ffffff;
    border-radius: 10rpx;
  }
</style>
<template>
  <view class="container">
    <view class="task">
      <view class="calendar">
      <view class="time">        
          <text>{{year}}年</text>
          <text>{{month}}月</text>
      </view>
      <view class="week-name">
        <view class="sunday">日</view>
        <view class="monday">一</view>
        <view class="tuesday">二</view>
        <view class="wednesday">三</view>
        <view class="thursday">四</view>
        <view class="friday">五</view>
        <view class="saturday">六</view>
      </view>
      <view class="week">
        <!--填补空格-->
        <view class="day" wx:for="{{nbsp}}" wx:key="k">
          <text decode="true"> </text>
        </view>
        <!--循环日期-->
        <view class="day" wx:for="{{monthDaySize}}" wx:for-item='day' wx:key="k">
          <text bindtap="daySelect" id="{{day+1}}" class="{{day+1 == date ? 'current-day' : ''}} {{selectDay == day+1 ? 'select-day' : ''}}">{{day+1}}</text>
        </view>
      </view>
    </view>
      <view class="task-detail">
        <view class="taks-tip">
          <text class="title">{{poemTitle}}</text>
          <text>任务进度</text>
          </view>
        <view class="task-item">
          <text class="title">朗读</text>
          <repeat for="{{readeds}}" key="i" index="idx" item="read">
          <text class="count on" wx:if="{{read}}">{{idx+1}}</text>        
          <text class="count"
            @tap="addCount"
            id="1"
            wx:else>{{idx+1}}</text>         
          </repeat>
        </view>
        <view class="task-item">
          <text class="title">抄写</text>
          <repeat for="{{writeds}}" key="i" index="idx" item="read">
          <text class="count on" wx:if="{{read}}">{{idx+1}}</text>        
          <text class="count"
            @tap="addCount"
            id="2"
            wx:else>{{idx+1}}</text>         
          </repeat>
        </view>
        <view class="task-item">
          <text class="title">默写</text>
          <repeat for="{{mriteds}}" key="i" index="idx" item="read">
          <text class="count on" wx:if="{{read}}">{{idx+1}}</text>        
          <text class="count"
            @tap="addCount"
            id="3"
            wx:else>{{idx+1}}</text>         
          </repeat>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import api from '../../api'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '任务'
  }

  components = {

  }

  data = {
    poemId: 0,
    poemTitle: '',
    task: {},
    readeds: [],
    writeds: [],
    mriteds: [],
    year: '',
    month: '',
    nbsp: '',
    monthDaySize: '',
    date: '',
    selectDay: ''
  }

  methods = {
    // 选中日期
    daySelect: (event) => {
      let seletDay = event.currentTarget.id
      if (seletDay > this.date) {
        // 超前的日期不可选
        return
      }

      this.selectDay = seletDay
      this.$apply()

      let month = this.month
      if (month < 10) {
        month = '0' + month
      }

      if (seletDay < 10) {
        seletDay = '0' + seletDay
      }

      // 格式2018-05-01
      let day = this.year + '-' + month + '-' + seletDay
      // 请求接口
      this.loadTask(day)
    }

  }

  onShow() {

  }

  async onLoad(options) {
    this.poemId = options.poem_id
    this.poemTitle = options.title
    await this.initCalendar()
  }

  // 获取任务详情
  async loadTask(day) {
    wepy.showLoading({
      title: '正在获取任务...'
    })

    const res = await api.request({
      url: api.uri.v1TaskInit,
      method: 'POST',
      data: {
        poem_id: parseInt(this.poemId),
        day: day
      }
    })
    if (res.code !== 1) {
      // 提示错误信息
      wepy.showToast({
        title: '初始化任务失败',
        icon: 'none',
        duration: 2000
      })
      return
    }
    this.task = res.data
    this.readeds = []
    this.writeds = []
    this.mriteds = []
    for (let i = 0; i < this.task.read_require; i++) {
      if (this.task.read > i) {
        this.readeds[i] = true
      } else {
        this.readeds[i] = false
      }
    }
    for (let i = 0; i < this.task.write_require; i++) {
      if (this.task.write > i) {
        this.writeds[i] = true
      } else {
        this.writeds[i] = false
      }
    }
    for (let i = 0; i < this.task.mrite_require; i++) {
      if (this.task.mrite > i) {
        this.mriteds[i] = true
      } else {
        this.mriteds[i] = false
      }
    }
    this.$apply()
    wepy.hideLoading()
  }

  // 添加完成任务次数
  async addCount(event) {
    wepy.showModal({
      title: '温馨提示',
      content: '您确定已完成吗？',
      confirmText: '确定',
      confirmColor: '#01C9A4',
      showCancel: true
    }).then(res => {
      // todo
      if (res.confirm) {
        let column = parseInt(event.currentTarget.id)
        this.doAddCount(column)
      }
    })
  }

  async doAddCount(column) {
    const res = await api.request({
      url: api.uri.v1TaskAddCount,
      method: 'POST',
      data: {
        task_id: parseInt(this.task.task_id),
        column: column
      }
    })
    if (res.code !== 1) {
      // 提示错误信息
      wepy.showToast({
        title: '操作失败',
        icon: 'none',
        duration: 2000
      })
      return
    }
    // 更新ui状态
    switch (column) {
      case 1:
        for (let i = 0; i < this.readeds.length; i++) {
          if (this.readeds[i] === false) {
            this.readeds[i] = true
            break
          }
        }
        break
      case 2:
        for (let i = 0; i < this.writeds.length; i++) {
          if (this.writeds[i] === false) {
            this.writeds[i] = true
            break
          }
        }
        break
      case 3:
        for (let i = 0; i < this.mriteds.length; i++) {
          if (this.mriteds[i] === false) {
            this.mriteds[i] = true
            break
          }
        }
        break
    }
    this.$apply()
  }

  // 初始化当月日历
  async initCalendar() {
    // 当前日期
    let currentDate = new Date()
    // 年份
    let year = currentDate.getFullYear()
    // 月份
    let month = currentDate.getMonth() + 1
    // 当前月第几天
    let date = currentDate.getDate()
    // 当前星期第几天
    let day = currentDate.getDay()
    // 每月天数
    let monthDaySize
    let nbsp
    if (date <= day) {
      nbsp = day - date + 1
    } else {
      nbsp = 7 - ((date - day) % 7) + 1
    }

    if (month === 1 || month === 3 || month === 5 || month === 7 || month === 8 || month === 10 || month === 12) {
      monthDaySize = 31
    } else if (month === 4 || month === 6 || month === 9 || month === 11) {
      monthDaySize = 30
    } else if (month === 2) {
      // 计算是否是闰年,如果是二月份则是29天
      if ((year - 2000) % 4 === 0) {
        monthDaySize = 29
      } else {
        monthDaySize = 28
      }
    }

    this.year = year
    this.month = month
    this.nbsp = nbsp
    this.monthDaySize = monthDaySize
    this.date = date
    this.$apply()

    if (month < 10) {
      month = '0' + month
    }

    if (date < 10) {
      date = '0' + date
    }

    this.loadTask(this.year + '-' + month + '-' + date)
  }
}
</script>
