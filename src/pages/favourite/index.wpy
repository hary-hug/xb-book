<style lang="less">
  .tab {  
    position: fixed;
    top: 0rpx;
    left: 0rpx;   
    width: 100%;
    padding-left: 20rpx; 
    height: 80rpx;        
    box-sizing: border-box;
    z-index: 100;
    background: #F5F7F9;
    .tab-title {
      margin-left: 40rpx;
      color: #0D0C0C;
      font-size: 38rpx;  
      text-align: center; 
      float: left; 
      .tit {   
        margin-top: 10rpx;
        height: 60rpx;
        line-height: 60rpx;        
        font-weight: 400;  
        display: inline-block;   
      } 
    }
    .active text {
      color: #01C9A4;  
      border-bottom: 2px solid #01C9A4;
    }
  }

  .list-1 {    
    float: left;
    width: 100%;
    height: 200rpx; 
    padding: 100rpx 40rpx 40rpx 40rpx;
    .serie-item {
      width: 100%;               
      background: #fff;
      border-radius: 10rpx;      
      margin-bottom: 40rpx;
      .title {
        font-size: 38rpx;
        font-weight: 400;
        padding: 20rpx 20rpx;
        border-bottom: 1px solid #F6F6F6;
      }
      .count {
        padding: 10rpx 20rpx;
        font-size: 28rpx;
      }
    }
  }

  .list-2 { 
    float: left;
    width: 100%;
    padding: 100rpx 40rpx 40rpx 40rpx;    
    .swipeout-container {
      display: flex;
      position: relative;
      overflow: hidden;
      background: #F5F7F9;
      .swipeout-content {
        z-index: 2;
        width: 100%;        
        background: #fff;
        padding: 20rpx 0;
      }
      .swipeout-content-mask {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 99;
      }
      .swipeout-action {
        display: flex;
        position: absolute;
        right: 0;
        top: 0;
        height:100%;
        view {
          display: flex;
        }
      }
    }
    .loading {
      height: 60rpx;
      color: #999;  
      font-size: 26rpx;
      text-align: center;
      padding: 20rpx 0rpx;
    }    
    .item.weight-5 {
      border-left: 3px solid rgba(255, 152, 0, 1); 
    }
    .item.weight-4 {
      border-left: 3px solid rgba(255, 152, 0, 0.6); 
    }
    .item.weight-3 {
      border-left: 3px solid rgba(255, 152, 0, 0.4); 
    }
    .item.weight-2 {
      border-left: 3px solid rgba(255, 152, 0, 0.3); 
    }
    .item.weight-1 {
      border-left: 3px solid rgba(255, 152, 0, 0.2); 
    }
    .item {       
      margin-bottom: 40rpx; 
      border-radius: 10rpx;       
      .left {        
        float: left;
        display: flex;
        flex-direction: column;   
        width: 80%;
        .title {
          font-size: 38rpx;
          font-weight: 400;
        }
        .author {
          font-size: 28rpx;
          margin-top: 10rpx;
        }
      }
      .right {
        float: right;              
        text {
          font-size: 26rpx;
          padding: 5rpx 15rpx;           
          border-radius: 5rpx;       
        }        
        .task {          
          color: #FF9800;
          border: 1rpx solid #FF9800;
        }     
      }
      .action-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        width: 100rpx;
        padding: 0 5px;
        font-size: 14px;
        color: #fff;        
      }
      .action-btn.btn-recited {
        background-color: #01C9A4;
      }
      .action-btn.btn-delete {
        border-top-right-radius: 10rpx;
        border-bottom-right-radius: 10rpx;
        background-color: #f55753;
      }
    }
  }

</style>

<template>
  <view class="container">
    <view class="tab clear">
      <view class="tab-title {{0 == currentTabIndex ? 'active' : ''}}" 
        bindtap="tabClick" 
        data-idx="0">
        <text class="tit">选集</text>      
      </view>    
      <view class="tab-title {{1 == currentTabIndex ? 'active' : ''}}" 
        bindtap="tabClick"
        data-idx="1">
        <text class="tit">诗词</text>       
      </view>    
    </view>    
    <view class="list-container clear">
      <!-- tab 1 -->
      <view class="list-1" wx:if="{{currentTabIndex == 0}}">   
        <repeat for="{{groups}}" key="i" index="idx" item="item">     
          <view class="serie-item">
            <navigator 
            class="title"
            hover-class="none"
            url="/pages/favourite/list?group={{item.group}}"
            open-type="navigate">{{item.group}}</navigator>  
            <view class="count">共{{item.total}}首</view>        
          </view> 
        </repeat>                
      </view>
      <!-- tab 2 -->
      <view class="list-2" wx:if="{{currentTabIndex == 1}}">
        <repeat for="{{poems}}" key="i" index="idx" item="poem">
          <view class="swipeout-container item weight-{{poem.weight}}">
            <view class="swipeout-content" 
              @tap="close" 
              @touchstart="start" 
              @touchmove="move" 
              @touchend="end" 
              id="{{idx}}"
              style="transform: translateX({{poem.left}}rpx);"> 
              <view class="swipeout-content-mask" style="width:{{poem.left === 0? '0' : '100%'}}"></view>     
              <view class="clear" style="padding: 0 20rpx;">
                <view class="left">
                  <navigator 
                  class="title"
                  hover-class="none"
                  url="/pages/poem/detail?poem_id={{poem.poem_id}}"
                  open-type="navigate">{{poem.title}}</navigator>
                  <text class="author">[{{poem.dynasty}}] {{poem.author}}</text>
                </view>
                <navigator 
                  class="right"
                  hover-class="none"
                  url="/pages/favourite/task?poem_id={{poem.poem_id}}&title={{poem.title}}"
                  open-type="navigate">
                  <text class="task">任务</text> 
                </navigator>
              </view>
            </view>
            <view class="swipeout-action" style="width:{{swipeoutWidth}}rpx">
              <view slot="action">
                <view 
                  class="action-btn btn-recited">会背</view>
                <view 
                  class="action-btn btn-delete" 
                  @tap="cancelFavourite" 
                  id="{{poem.poem_id}}">删除</view>
              </view>
            </view>
          </view>
        </repeat>          
        <view class="loading" wx:if="{{isLoading}}">
            <text>玩命加载中···</text>
        </view>      
      </view> 
    </view>     
  </view>
</template>

<script>
import wepy from 'wepy'
import api from '../../api'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '收藏',
    enablePullDownRefresh: true
  }

  components = {

  }

  data = {
    currentTabIndex: 0,
    page: 1,
    pageSize: 10,
    isEnd: false,
    isLoading: false,
    groups: [],
    poems: [],
    swipeoutWidth: 200 // 滑出的右侧宽度,单位rpx
  }

  methods = {
    // 点击tab时调用
    tabClick: function (e) {
      this.currentTabIndex = e.currentTarget.dataset.idx
      this.$apply()
    },    
    close: (e) => {
      let idx = e.currentTarget.id
      // 点击关闭
      this.poems[idx].left = 0
    },
    start: (e) => {
      let idx = e.currentTarget.id
      this.poems[idx].startX = e.touches[0].clientX
      // 处理已经滑动到最左测，再次开始继续向左滑动的情况
      if (this.poems[idx].left === -this.swipeoutWidth) {
        this.poems[idx].left = 0
        this.poems[idx].startX = 0
      }
    },
    move: (e) => {
      let idx = e.currentTarget.id
      const endX = e.touches[0].clientX
      const offsetX = endX - this.poems[idx].startX
      // 左移
      if (offsetX < 0) {
        this.poems[idx].left = offsetX
      }
      // 右移
      if (offsetX > 0) {
        this.poems[idx].left = Math.min(this.poems[idx].left + offsetX, 0)
      }
    },
    end: (e) => {
      let idx = e.currentTarget.id
      if (this.poems[idx].left < -100) {
        // 只要有滑动后，松开后自动全部显示
        this.poems[idx].left = -this.swipeoutWidth
      } else {
        this.poems[idx].left = 0
      }
    },

    // 删除收藏
    cancelFavourite: async (e) => {
      const poemId = parseInt(e.currentTarget.id)
      const res = await api.request({
        url: api.uri.cancelFavourite,
        method: 'POST',
        data: {
          poem_id: parseInt(poemId)
        }
      })

      if (res.code !== 1) {
        // 提示错误
        wepy.showToast({
          title: res.msg,
          icon: 'none',
          duration: 2000
        })
        return
      }

      this.poems = this.poems.filter(f => {
        return f.poem_id !== poemId
      })
      this.$apply()
    }
  }

  async onShow() {
    
  }

  // 滚动到底部加载数据
  onReachBottom () {
    if (this.currentTabIndex == 2) {
        this.getPoems()
    }    
  }

  async onPullDownRefresh () {
    wepy.showNavigationBarLoading()
    this.poems = []
    this.page = 1
    this.isEnd = false
    this.isLoading = false
    await this.getGroups()
    await this.getPoems()
    wepy.stopPullDownRefresh()
    wepy.hideNavigationBarLoading()
  }

  async onLoad(options) {    
    this.poems = []
    this.page = 1
    this.isEnd = false
    this.isLoading = false
    await this.getGroups()
    await this.getPoems()
  }

  async getPoems() {
    if (this.isEnd) {
      return
    }
    if (this.isLoading) {
      return
    }
    this.isLoading = true
    const res = await api.request({
      url: api.uri.favourites,
      method: 'GET',
      data: {
        group: "",
        page: this.page
      }
    })
    this.isLoading = false
    if (res.data.length >= this.pageSize) {
      ++this.page
      this.isEnd = false
    } else {
      this.isEnd = true
    }
    for (let i = 0; i < res.data.length; i++) {
      res.data[i].startX = 0
      res.data[i].left = 0
    }
    this.poems = this.poems.concat(res.data)
    this.$apply()
  }

  async getGroups() {

    const res = await api.request({
      url: api.uri.favouriteGroups,
      method: 'GET'      
    })
    
    this.groups = res.data
    this.$apply()
  }
}
</script>
